{"version":3,"file":"component---src-pages-index-js-e5b885b1383d568cc27d.js","mappings":"kNAOA,MAAM,OAAEA,EAAM,UAAEC,EAAS,MAAEC,GAAUC,EAAAA,GAE/BC,GAAkBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAQC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAfJ,CAAe,4DAMjCK,GAAgBL,EAAAA,EAAAA,SAAOM,EAAAA,IAAQJ,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAfJ,CAAe,wJAE1BL,EAAOY,MACHX,EAAUY,GACRX,EAAMY,OAKNb,EAAUc,IAOrBC,EAAOX,EAAAA,QAAOY,IAAGV,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAVJ,CAAU,4IAKnBa,EAAAA,GAAMC,OAAO,yCACbD,EAAAA,GAAME,MAAM,yCACZF,EAAAA,GAAMG,OAAO,+BASXC,EAAgBjB,EAAAA,QAAOY,IAAGV,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAVJ,CAAU,iOAIVL,EAAOY,MAQXT,EAAAA,GAAMoB,YAkDxB,MApCiBC,IAAqB,IAApB,WAAEC,GAAYD,EAC9B,MAAME,GAAkBC,EAAAA,EAAAA,QAAO,MAG/B,OAFAC,EAAAA,EAAAA,YAAU,IAAMC,EAAAA,EAAGC,OAAOJ,EAAgBK,SAASC,EAAAA,EAAAA,cAAa,IAG9DC,EAAAA,cAAC7B,EAAe,CAAC8B,GAAG,WAAWC,IAAKT,GAClCO,EAAAA,cAACvB,EAAa,KAAC,iBAEfuB,EAAAA,cAACjB,EAAI,KACJS,EAAWW,KAAI,CAACC,EAAWC,IAC9BL,EAAAA,cAACX,EAAa,CAACiB,IAAKD,GACfD,EAAUG,OAASH,EAAUG,MAAMC,iBAAmBJ,EAAUG,MAAMC,gBAAgBC,MACnFT,EAAAA,cAACU,EAAAA,EAAG,CAACD,MAAOL,EAAUG,MAAMC,gBAAgBC,MAAOE,IAAKP,EAAUQ,QAElEZ,EAAAA,cAAA,SAAG,sBAEPA,EAAAA,cAAA,SAAII,EAAUS,iBAKA,ECrFtB,MAAMC,GAAsB1C,EAAAA,EAAAA,SAAO2C,EAAAA,IAAKzC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAZJ,CAAY,4BAuBxC,MAnBkBmB,IAAA,IAAC,SAAEyB,EAAQ,KAAEC,GAAM1B,EAAA,OACnCS,EAAAA,cAACkB,EAAAA,GAAM,CAACF,SAAUA,GAChBhB,EAAAA,cAACc,EAAmB,CAACK,UAAU,cAC7BnB,EAAAA,cAACoB,EAAAA,GAAI,CAACH,KAAMA,EAAKI,KAAKC,QACtBtB,EAAAA,cAACuB,EAAAA,GAAK,CAACN,KAAMA,EAAKO,MAAMF,QACxBtB,EAAAA,cAACyB,EAAAA,GAAI,CAACR,KAAMA,EAAKS,KAAKJ,QACtBtB,EAAAA,cAAC2B,EAAAA,GAAQ,CAACV,KAAMA,EAAKW,SAASN,QAC9BtB,EAAAA,cAAC6B,EAAAA,GAAM,CAACZ,KAAMA,EAAKa,OAAOR,QAC1BtB,EAAAA,cAAC+B,EAAQ,CAACvC,WAAYyB,EAAKe,SAASV,MAAM,GAAGW,KAAKC,YAAY1C,aAC9DQ,EAAAA,cAACmC,EAAAA,GAAO,CAAClB,KAAMA,EAAKmB,QAAQd,SAEvB,C","sources":["webpack://v/./src/components/sections/Personal.js","webpack://v/./src/pages/index.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport sr from '@utils/sr';\nimport { srConfig } from '@config';\nimport styled from 'styled-components';\nimport { theme, mixins, media, Section, Heading } from '@styles';\nimport Img from \"gatsby-image\";\nconst { colors, fontSizes, fonts } = theme;\n\nconst StyledContainer = styled(Section)`\n  text-align: center;\n  max-width: 900px;\n  margin: 0 auto 100px;\n`;\n\nconst StyledHeading = styled(Heading)`\n  display: block;\n  color: ${colors.green};\n  font-size: ${fontSizes.md};\n  font-family: ${fonts.SFMono};\n  font-weight: normal;\n  margin-bottom: 30px;\n  &:before {\n    bottom: 0;\n    font-size: ${fontSizes.sm};\n  }\n  &:after {\n    display: none;\n  }\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n\n  ${media.desktop`grid-template-columns: repeat(3, 1fr);`};\n  ${media.tablet`grid-template-columns: repeat(2, 1fr);`};\n  ${media.phablet`grid-template-columns: 1fr;`};\n\n  /* Targeting the 5th grid item */\n  > div:nth-child(5) {\n    grid-column-end: span 2; \n  }\n`;\n\n\nconst AdventureItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border: 1px solid ${colors.green};\n  border-radius: 5px;\n  overflow: hidden;\n\n  img {\n    flex: 3; /* allocate more space for the image */\n    width: 100%;\n    height: auto;\n    transition: ${theme.transition};\n    &:hover {\n      transform: scale(1.3);\n    }\n  }\n\n  p {\n    flex: 1; /* allocate less space for the text */\n    padding: 15px;\n    text-align: left;\n  }\n`;\n \n\nconst Personal = ({ adventures }) => {\n  const revealContainer = useRef(null);\n  useEffect(() => sr.reveal(revealContainer.current, srConfig()), []);\n\n  return (\n    <StyledContainer id=\"personal\" ref={revealContainer}>\n      <StyledHeading>My Adventures</StyledHeading>\n      \n      <Grid>\n      {adventures.map((adventure, index) => (\n    <AdventureItem key={index}>\n        {adventure.image && adventure.image.childImageSharp && adventure.image.childImageSharp.fluid ? (\n            <Img fluid={adventure.image.childImageSharp.fluid} alt={adventure.title} />\n        ) : (\n            <p>No Image Available</p>\n        )}\n        <p>{adventure.description}</p>\n    </AdventureItem>\n))}\n\n      </Grid>\n    </StyledContainer>\n  );\n};\n\nPersonal.propTypes = {\n  adventures: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.object.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\n\nexport default Personal;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Layout, Hero, About, Jobs, Featured, Extras, Contact } from '@components';\nimport styled from 'styled-components';\nimport { Main } from '@styles';\n\nimport Personal from '@components/sections/Personal';\n\nconst StyledMainContainer = styled(Main)`\n  counter-reset: section;\n`;\n\nconst IndexPage = ({ location, data }) => (\n  <Layout location={location}>\n    <StyledMainContainer className=\"fillHeight\">\n      <Hero data={data.hero.edges} />\n      <About data={data.about.edges} />\n      <Jobs data={data.jobs.edges} />\n      <Featured data={data.featured.edges} />\n      <Extras data={data.extras.edges} />\n      <Personal adventures={data.personal.edges[0].node.frontmatter.adventures} />\n      <Contact data={data.contact.edges} />\n    </StyledMainContainer>\n  </Layout>\n);\n//<Projects data={data.projects.edges} />\nIndexPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  {\n    hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            name\n            subtitle\n            buttonText\n          }\n          html\n        }\n      }\n    }\n    about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            avatar {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            skills\n          }\n          html\n        }\n      }\n    }\n    jobs: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/jobs/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            company\n            range\n            url\n          }\n          html\n        }\n      }\n    }\n    featured: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/featured/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#ffffff\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            tech\n            github\n            external\n          }\n          html\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/projects/\" }\n        frontmatter: { showInProjects: { ne: false } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            tech\n            github\n            external\n          }\n          html\n        }\n      }\n    }\n    extras: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/extras/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            buttonText\n          }\n          html\n        }\n      }\n    }\n\n    personal: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/personal/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            adventures {\n              image {\n                childImageSharp {\n                  fluid(maxWidth: 1000) {\n                    ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                  }\n                }\n              }\n              title\n              description\n            }\n          }\n          html\n        }\n      }\n    }\n    \n    \n\n    contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            buttonText\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["colors","fontSizes","fonts","theme","StyledContainer","styled","Section","withConfig","displayName","componentId","StyledHeading","Heading","green","md","SFMono","sm","Grid","div","media","desktop","tablet","phablet","AdventureItem","transition","_ref","adventures","revealContainer","useRef","useEffect","sr","reveal","current","srConfig","React","id","ref","map","adventure","index","key","image","childImageSharp","fluid","Img","alt","title","description","StyledMainContainer","Main","location","data","Layout","className","Hero","hero","edges","About","about","Jobs","jobs","Featured","featured","Extras","extras","Personal","personal","node","frontmatter","Contact","contact"],"sourceRoot":""}