{"version":3,"file":"component---src-pages-index-js-981e1235d9cf2bd58b36.js","mappings":"+NAOQA,EAA6BC,EAAAA,GAAAA,OAArBC,EAAqBD,EAAAA,GAAAA,UAAVE,EAAUF,EAAAA,GAAAA,MAE/BG,GAAkBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAQ,+EAAfD,CAAe,4DAMjCE,GAAgBF,EAAAA,EAAAA,SAAOG,EAAAA,IAAQ,6EAAfH,CAAe,wJAE1BL,EAAOS,MACHP,EAAUQ,GACRP,EAAMQ,OAKNT,EAAUU,IAOrBC,EAAOR,EAAAA,QAAAA,IAAAA,WAAU,yDAAVA,CAAU,4IAKnBS,EAAAA,GAAAA,QAAa,4DACbA,EAAAA,GAAAA,OAAY,4DACZA,EAAAA,GAAAA,QAAa,kDASXC,EAAgBV,EAAAA,QAAAA,IAAAA,WAAU,kEAAVA,CAAU,iOAIVL,EAAOS,MAQXR,EAAAA,GAAAA,YAkDlB,EApCiB,SAAH,GAAwB,IAAlBe,EAAU,EAAVA,WACZC,GAAkBC,EAAAA,EAAAA,QAAO,MAG/B,OAFAC,EAAAA,EAAAA,YAAU,kBAAMC,EAAAA,EAAAA,OAAUH,EAAgBI,SAASC,EAAAA,EAAAA,YAAW,GAAE,IAG9D,gBAAClB,EAAe,CAACmB,GAAG,WAAWC,IAAKP,GAClC,gBAACV,EAAa,KAAC,iBAEf,gBAACM,EAAI,KACJG,EAAWS,KAAI,SAACC,EAAWC,GAAK,OACnC,gBAACZ,EAAa,CAACa,IAAKD,GACfD,EAAUG,OAASH,EAAUG,MAAMC,iBAAmBJ,EAAUG,MAAMC,gBAAgBC,MACnF,gBAAC,IAAG,CAACA,MAAOL,EAAUG,MAAMC,gBAAgBC,MAAOC,IAAKN,EAAUO,QAElE,yBAAG,sBAEP,yBAAIP,EAAUQ,aACF,KAMpB,ECvFMC,GAAsB9B,EAAAA,EAAAA,SAAO+B,EAAAA,IAAK,iFAAZ/B,CAAY,4BAuBxC,EAnBkB,SAAH,OAAMgC,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAAI,OACjC,gBAAC,KAAM,CAACD,SAAUA,GAChB,gBAACF,EAAmB,CAACI,UAAU,cAC7B,gBAAC,KAAI,CAACD,KAAMA,EAAKE,KAAKC,QACtB,gBAAC,KAAK,CAACH,KAAMA,EAAKI,MAAMD,QACxB,gBAAC,KAAI,CAACH,KAAMA,EAAKK,KAAKF,QACtB,gBAAC,KAAQ,CAACH,KAAMA,EAAKM,SAASH,QAC9B,gBAAC,KAAM,CAACH,KAAMA,EAAKO,OAAOJ,QAC1B,gBAAC,EAAQ,CAACzB,WAAYsB,EAAKQ,SAASL,MAAM,GAAGM,KAAKC,YAAYhC,aAC9D,gBAAC,KAAO,CAACsB,KAAMA,EAAKW,QAAQR,SAEvB,C","sources":["webpack://v/./src/components/sections/Personal.js","webpack://v/./src/pages/index.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport sr from '@utils/sr';\nimport { srConfig } from '@config';\nimport styled from 'styled-components';\nimport { theme, mixins, media, Section, Heading } from '@styles';\nimport Img from \"gatsby-image\";\nconst { colors, fontSizes, fonts } = theme;\n\nconst StyledContainer = styled(Section)`\n  text-align: center;\n  max-width: 900px;\n  margin: 0 auto 100px;\n`;\n\nconst StyledHeading = styled(Heading)`\n  display: block;\n  color: ${colors.green};\n  font-size: ${fontSizes.md};\n  font-family: ${fonts.SFMono};\n  font-weight: normal;\n  margin-bottom: 30px;\n  &:before {\n    bottom: 0;\n    font-size: ${fontSizes.sm};\n  }\n  &:after {\n    display: none;\n  }\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n\n  ${media.desktop`grid-template-columns: repeat(3, 1fr);`};\n  ${media.tablet`grid-template-columns: repeat(2, 1fr);`};\n  ${media.phablet`grid-template-columns: 1fr;`};\n\n  /* Targeting the 5th grid item */\n  > div:nth-child(5) {\n    grid-column-end: span 2; \n  }\n`;\n\n\nconst AdventureItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border: 1px solid ${colors.green};\n  border-radius: 5px;\n  overflow: hidden;\n\n  img {\n    flex: 3; /* allocate more space for the image */\n    width: 100%;\n    height: auto;\n    transition: ${theme.transition};\n    &:hover {\n      transform: scale(1.3);\n    }\n  }\n\n  p {\n    flex: 1; /* allocate less space for the text */\n    padding: 15px;\n    text-align: left;\n  }\n`;\n \n\nconst Personal = ({ adventures }) => {\n  const revealContainer = useRef(null);\n  useEffect(() => sr.reveal(revealContainer.current, srConfig()), []);\n\n  return (\n    <StyledContainer id=\"personal\" ref={revealContainer}>\n      <StyledHeading>My Adventures</StyledHeading>\n      \n      <Grid>\n      {adventures.map((adventure, index) => (\n    <AdventureItem key={index}>\n        {adventure.image && adventure.image.childImageSharp && adventure.image.childImageSharp.fluid ? (\n            <Img fluid={adventure.image.childImageSharp.fluid} alt={adventure.title} />\n        ) : (\n            <p>No Image Available</p>\n        )}\n        <p>{adventure.description}</p>\n    </AdventureItem>\n))}\n\n      </Grid>\n    </StyledContainer>\n  );\n};\n\nPersonal.propTypes = {\n  adventures: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.object.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\n\nexport default Personal;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Layout, Hero, About, Jobs, Featured, Extras, Contact } from '@components';\nimport styled from 'styled-components';\nimport { Main } from '@styles';\n\nimport Personal from '@components/sections/Personal';\n\nconst StyledMainContainer = styled(Main)`\n  counter-reset: section;\n`;\n\nconst IndexPage = ({ location, data }) => (\n  <Layout location={location}>\n    <StyledMainContainer className=\"fillHeight\">\n      <Hero data={data.hero.edges} />\n      <About data={data.about.edges} />\n      <Jobs data={data.jobs.edges} />\n      <Featured data={data.featured.edges} />\n      <Extras data={data.extras.edges} />\n      <Personal adventures={data.personal.edges[0].node.frontmatter.adventures} />\n      <Contact data={data.contact.edges} />\n    </StyledMainContainer>\n  </Layout>\n);\n//<Projects data={data.projects.edges} />\nIndexPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  {\n    hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            name\n            subtitle\n            buttonText\n          }\n          html\n        }\n      }\n    }\n    about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            avatar {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            skills\n          }\n          html\n        }\n      }\n    }\n    jobs: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/jobs/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            company\n            range\n            url\n          }\n          html\n        }\n      }\n    }\n    featured: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/featured/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#ffffff\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            tech\n            github\n            external\n          }\n          html\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/projects/\" }\n        frontmatter: { showInProjects: { ne: false } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            tech\n            github\n            external\n          }\n          html\n        }\n      }\n    }\n    extras: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/extras/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            buttonText\n          }\n          html\n        }\n      }\n    }\n\n    personal: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/personal/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            adventures {\n              image {\n                childImageSharp {\n                  fluid(maxWidth: 1000) {\n                    ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                  }\n                }\n              }\n              title\n              description\n            }\n          }\n          html\n        }\n      }\n    }\n    \n    \n\n    contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            buttonText\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["colors","theme","fontSizes","fonts","StyledContainer","styled","Section","StyledHeading","Heading","green","md","SFMono","sm","Grid","media","AdventureItem","adventures","revealContainer","useRef","useEffect","sr","current","srConfig","id","ref","map","adventure","index","key","image","childImageSharp","fluid","alt","title","description","StyledMainContainer","Main","location","data","className","hero","edges","about","jobs","featured","extras","personal","node","frontmatter","contact"],"sourceRoot":""}